{"version":3,"file":"static/js/658.4f423200.chunk.js","mappings":"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","sources":["user/Userprofile.js"],"sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useAuth } from \"../Context/auth\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport axios from \"axios\";\r\n// import { RxAvatar } from \"react-icons/rx\";\r\nimport Nav from \"../components/Navbar/Nav\";\r\nimport UserMenu from \"./userMenu\";\r\n\r\nconst Profile = () => {\r\n  const [userName, SetUserName] = useState(\"\");\r\n  const [email, SetEmail] = useState(\"\");\r\n  const [password, SetPassword] = useState(\"\");\r\n  const [phone, SetPhone] = useState(\"\");\r\n  const [address, SetAddress] = useState(\"\");\r\n  // const [userPhoto, SetUserPhoto] = useState(null);\r\n  const [auth, SetAuth] = useAuth();\r\n  const [toogle, SetToogle] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const { email, userName, phone, address } = auth.user;\r\n    SetUserName(userName);\r\n    SetEmail(email);\r\n    SetPhone(phone);\r\n    SetAddress(address);\r\n    // SetUserPhoto(userPhoto);\r\n  }, [auth.user]);\r\n\r\n  const HandleUpdate = async (e) => {\r\n    try {\r\n      e.preventDefault();\r\n      const YesUpdate = window.prompt(\r\n        \"are you sure you want to update the user if yes type 'UPDATE'\"\r\n      );\r\n      if (YesUpdate === \"UPDATE\") {\r\n        let { data } = await axios.put(\"/api/auth/update-profile\", {\r\n          userName,\r\n          phone,\r\n          address,\r\n          email,\r\n          password,\r\n        });\r\n\r\n        if (data?.success) {\r\n          toast.success(data.message);\r\n          SetAuth({ ...auth, user: data?.updatedUser });\r\n          let ls = localStorage.getItem(\"auth\");\r\n          ls = JSON.parse(ls);\r\n          ls.user = data.updatedUser;\r\n          localStorage.setItem(\"auth\", JSON.stringify(ls));\r\n        } else {\r\n          toast.error(data.error);\r\n        }\r\n      } else {\r\n        return;\r\n      }\r\n    } catch (error) {\r\n      toast.error(\"something went wrong!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Nav />\r\n      <div className=\"profile_main \">\r\n        <hr />\r\n        <div className=\"d-flex row container-fluid p-3 \">\r\n          <div className=\"col-lg-2 col-md-12\">\r\n            <UserMenu />\r\n          </div>\r\n          <div className=\"col-lg-10  col-sm-12ps-5 mb-4\">\r\n            <div className=\" p-3 w-90 ps-5 pt-1 \">\r\n              <div\r\n                className=\"p-4 rounded-4\"\r\n                style={{\r\n                  boxShadow:\r\n                    \"rgba(0, 0, 0, 0.4) 0px 2px 4px, rgba(0, 0, 0, 0.3) 0px 7px 13px -3px, rgba(0, 0, 0, 0.2) 0px -3px 0px inset\",\r\n                }}\r\n              >\r\n                <div className=\"d-flex  flex-row mb-3 \">\r\n                  {/* <div className=\"col-md-5\">\r\n                    {true ? (\r\n                      <img\r\n                        src={`/api/auth/userphoto/${auth.user._id}`}\r\n                        style={{\r\n                          boxShadow:\r\n                            \"rgba(0, 0, 0, 0.4) 0px 2px 4px, rgba(0, 0, 0, 0.3) 0px 7px 13px -3px, rgba(0, 0, 0, 0.2) 0px -3px 0px inset\",\r\n                        }}\r\n                        alt=\"userPhoto\"\r\n                        className=\"avatar\"\r\n                      />\r\n                    ) : (\r\n                      <RxAvatar className=\"h1 \" />\r\n                    )}\r\n                  </div> */}\r\n\r\n                  <div className=\" col-md-12  d-flex flex-column\">\r\n                    <h2 className=\"text-center text-uppercase fw-bold d-flex justify-content-center bg-light py-4 \">\r\n                      {\" \"}\r\n                      {auth?.user?.userName}'S Profile Data\r\n                    </h2>\r\n                    <div className=\"  d-flex flex-row gap-3\">\r\n                      <button\r\n                        className=\"btn btn-success  fw-bold py-2   ms-3 px-5  col-md-4  \"\r\n                        onClick={() => SetToogle(!toogle)}\r\n                      >\r\n                        {toogle ? \"Edit\" : \"Preview\"}\r\n                      </button>\r\n                      <button\r\n                        className=\"btn btn-danger  py-2 col-md-3  fw-bold  align-self-stretch    \"\r\n                        onClick={() =>\r\n                          toast.success(\r\n                            \"some Action need to be added here in futher\"\r\n                          )\r\n                        }\r\n                      >\r\n                        Action\r\n                      </button>\r\n                      <button\r\n                        className=\"btn btn-danger  py-2 col-md-4  fw-bold  px-5    \"\r\n                        onClick={() =>\r\n                          toast.success(\r\n                            \"this function will be added here in futher\"\r\n                          )\r\n                        }\r\n                      >\r\n                        Share Profile\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <hr />\r\n\r\n                <form className=\"ps-3 \">\r\n                  {toogle && (\r\n                    <fieldset disabled>\r\n                      {\" \"}\r\n                      <div className=\"txt_field\">\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"userName\"\r\n                          autoComplete=\"off\"\r\n                          value={userName}\r\n                          onChange={(e) => SetUserName(e.target.value)}\r\n                        />\r\n\r\n                        <span></span>\r\n                        <label>{toogle ? \"\" : \"Username\"}</label>\r\n                      </div>\r\n                      <div className=\"txt_field\">\r\n                        <input\r\n                          type=\"Number\"\r\n                          name=\"phone\"\r\n                          autoComplete=\"off\"\r\n                          value={phone}\r\n                          onChange={(e) => SetPhone(e.target.value)}\r\n                        />\r\n\r\n                        <span></span>\r\n                        <label>{toogle ? \"\" : \"Phone\"}</label>\r\n                      </div>\r\n                      <div className=\"txt_field\">\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"address\"\r\n                          autoComplete=\"off\"\r\n                          value={address}\r\n                          onChange={(e) => SetAddress(e.target.value)}\r\n                        />\r\n\r\n                        <span></span>\r\n                        <label>{toogle ? \"\" : \"Address\"}</label>\r\n                      </div>\r\n                      <div className=\"txt_field\">\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"email\"\r\n                          autoComplete=\"off\"\r\n                          value={email}\r\n                          onChange={(e) => SetEmail(e.target.value)}\r\n                        />\r\n                        <span></span>\r\n                        <label>{toogle ? \"\" : \"Email\"}</label>\r\n                      </div>\r\n                      <div className=\"txt_field\">\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"password\"\r\n                          autoComplete=\"off\"\r\n                          value={password}\r\n                          onChange={(e) => SetPassword(e.target.value)}\r\n                        />\r\n                        <span></span>\r\n                        <label>{toogle ? \"\" : \"Password\"}</label>\r\n                      </div>\r\n                      <input type=\"submit\" value=\"update\" />\r\n                    </fieldset>\r\n                  )}\r\n                  {!toogle && (\r\n                    <fieldset>\r\n                      {\" \"}\r\n                      <div className=\"txt_field\">\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"userName\"\r\n                          autoComplete=\"off\"\r\n                          value={userName}\r\n                          onChange={(e) => SetUserName(e.target.value)}\r\n                        />\r\n\r\n                        <span></span>\r\n                        <label>UserName</label>\r\n                      </div>\r\n                      <div className=\"txt_field\">\r\n                        <input\r\n                          type=\"Number\"\r\n                          name=\"phone\"\r\n                          autoComplete=\"off\"\r\n                          value={phone}\r\n                          onChange={(e) => SetPhone(e.target.value)}\r\n                        />\r\n\r\n                        <span></span>\r\n                        <label>Phone</label>\r\n                      </div>\r\n                      <div className=\"txt_field\">\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"address\"\r\n                          autoComplete=\"off\"\r\n                          value={address}\r\n                          onChange={(e) => SetAddress(e.target.value)}\r\n                        />\r\n\r\n                        <span></span>\r\n                        <label>Address</label>\r\n                      </div>\r\n                      <div className=\"txt_field\">\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"email\"\r\n                          className=\"fw-bold\"\r\n                          autoComplete=\"off\"\r\n                          value={email}\r\n                          disabled\r\n                          onChange={(e) => SetEmail(e.target.value)}\r\n                        />\r\n                        <span></span>\r\n                        <label>{!toogle ? \"\" : \"Email\"}</label>\r\n                      </div>\r\n                      <div className=\"txt_field\">\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"password\"\r\n                          autoComplete=\"off\"\r\n                          value={password}\r\n                          onChange={(e) => SetPassword(e.target.value)}\r\n                        />\r\n                        <span></span>\r\n                        <label>password</label>\r\n                      </div>\r\n                      {/* <div className=\"mt-3 p-3  ms-5 \">\r\n                        {userPhoto ? (\r\n                          <img\r\n                            src={Window.URL.createObjectURL(userPhoto)}\r\n                            alt=\"userAvatar\"\r\n                            className=\"  avatar\"\r\n                          />\r\n                        ) : (\r\n                          <RxAvatar className=\"h1 \" />\r\n                        )}\r\n                        <label\r\n                          htmlFor=\"file-input\"\r\n                          className=\" p-2  ms-3 fileupload\"\r\n                        >\r\n                          {\" \"}\r\n                          <span>upload a file</span>\r\n                        </label>\r\n                        <input\r\n                          type=\"file\"\r\n                          name=\"USER_PHOTO\"\r\n                          id=\"file-input\"\r\n                          onChange={(e) => SetUserPhoto(e.target.files[0])}\r\n                          accept=\"image/*\"\r\n                          className=\"input_file\"\r\n                        />\r\n                      </div> */}\r\n                      <input\r\n                        type=\"submit\"\r\n                        value=\"update\"\r\n                        onClick={HandleUpdate}\r\n                      />\r\n                    </fieldset>\r\n                  )}\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"names":["_auth$user2","_useState","useState","_useState2","_slicedToArray","userName","SetUserName","_useState3","_useState4","email","SetEmail","_useState5","_useState6","password","SetPassword","_useState7","_useState8","phone","SetPhone","_useState9","_useState10","address","SetAddress","_useAuth","useAuth","_useAuth2","auth","SetAuth","_useState11","_useState12","toogle","SetToogle","useEffect","_auth$user","user","HandleUpdate","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","_yield$axios$put","data","ls","wrap","_context","prev","next","preventDefault","window","prompt","axios","sent","success","toast","message","_objectSpread","updatedUser","localStorage","getItem","JSON","parse","setItem","stringify","error","abrupt","t0","stop","_x","apply","arguments","_jsxs","children","_jsx","Nav","className","UserMenu","style","boxShadow","onClick","disabled","type","name","autoComplete","value","onChange","target"],"sourceRoot":""}