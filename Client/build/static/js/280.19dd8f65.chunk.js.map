{"version":3,"file":"static/js/280.19dd8f65.chunk.js","mappings":"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","sources":["Pages/Login/Login.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport \"./login.css\";\r\nimport axios from \"axios\";\r\nimport Nav from \"../../components/Navbar/Nav\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport { useAuth } from \"../../Context/auth\";\r\nconst Login = () => {\r\n  const [email, Setemail] = useState(\"\");\r\n  const [password, Setpassword] = useState(\"\");\r\n  const Navigate = useNavigate();\r\n  const [auth, SetAuth] = useAuth();\r\n  const [loading, SetLoading] = useState(false);\r\n  const location = useLocation();\r\n  const HandleSubmit = async (e) => {\r\n    try {\r\n      SetLoading(true);\r\n      e.preventDefault();\r\n\r\n      let res = await axios.post(\"/api/auth/login\", {\r\n        email,\r\n        password,\r\n      });\r\n\r\n      if (res && res.data.success) {\r\n        toast.success(res.data.message);\r\n\r\n        SetAuth({\r\n          ...auth,\r\n          user: res.data.user,\r\n          token: res.data.token,\r\n        });\r\n        localStorage.setItem(\"auth\", JSON.stringify(res.data));\r\n        Navigate(location.state || \"/\");\r\n        SetLoading(false);\r\n      } else {\r\n        SetLoading(false);\r\n        toast.error(res && res.data.message);\r\n      }\r\n    } catch (error) {\r\n      SetLoading(false);\r\n    \r\n      toast.error(\"something went wrong!\");\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <Nav />\r\n      <Toaster />\r\n      <div className=\"center\">\r\n        <h4>Login</h4>\r\n        <form onSubmit={HandleSubmit}>\r\n          <div className=\"txt_field\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={(e) => Setemail(e.target.value)}\r\n              required\r\n            />\r\n            <span></span>\r\n            <label>email</label>\r\n          </div>\r\n          <div className=\"txt_field\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={(e) => Setpassword(e.target.value)}\r\n              required\r\n            />\r\n            <span></span>\r\n            <label>password</label>\r\n          </div>\r\n          <NavLink className=\"nav-link pass\" exact to=\"/forgetpassword\">\r\n            forgetpassword?\r\n          </NavLink>\r\n          <button role=\"submit\" className=\"btn btn-primary \" onClick={HandleSubmit}>\r\n            {loading ? \"please wait\" : \"Signup\"}\r\n          </button>\r\n          <div className=\"signup_link\">\r\n            Not a member?{\" \"}\r\n            <NavLink className=\"nav-link \"  exact to=\"/signup\">\r\n              sign up\r\n            </NavLink>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","email","Setemail","_useState3","_useState4","password","Setpassword","Navigate","useNavigate","_useAuth","useAuth","_useAuth2","auth","SetAuth","_useState5","_useState6","loading","SetLoading","location","useLocation","HandleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","res","wrap","_context","prev","next","preventDefault","axios","sent","data","success","toast","message","_objectSpread","user","token","localStorage","setItem","JSON","stringify","state","t0","stop","_x","apply","arguments","_jsxs","children","_jsx","Nav","Toaster","className","onSubmit","type","name","value","onChange","target","required","NavLink","exact","to","role","onClick"],"sourceRoot":""}